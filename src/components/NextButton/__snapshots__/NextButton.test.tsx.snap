// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NextButton component should match snapshot if no change was intended 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NextButton
    name="test"
    to="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Link
        replace={false}
        to="/calculator/test"
      >
        <div
          className="container"
        >
          <button>
            <span>
              test
            </span>
            <div
              className="square"
            >
              <i
                className="arrow right"
              />
            </div>
          </button>
        </div>
      </Link>,
      "className": "next-btn",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="container"
        >
          <button>
            <span>
              test
            </span>
            <div
              className="square"
            >
              <i
                className="arrow right"
              />
            </div>
          </button>
        </div>,
        "replace": false,
        "to": "/calculator/test",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button>
            <span>
              test
            </span>
            <div
              className="square"
            >
              <i
                className="arrow right"
              />
            </div>
          </button>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                test
              </span>,
              <div
                className="square"
              >
                <i
                  className="arrow right"
                />
              </div>,
            ],
            "onClick": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="arrow right"
                />,
                "className": "square",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "arrow right",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              "type": "div",
            },
          ],
          "type": "button",
        },
        "type": "div",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          replace={false}
          to="/calculator/test"
        >
          <div
            className="container"
          >
            <button>
              <span>
                test
              </span>
              <div
                className="square"
              >
                <i
                  className="arrow right"
                />
              </div>
            </button>
          </div>
        </Link>,
        "className": "next-btn",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="container"
          >
            <button>
              <span>
                test
              </span>
              <div
                className="square"
              >
                <i
                  className="arrow right"
                />
              </div>
            </button>
          </div>,
          "replace": false,
          "to": "/calculator/test",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button>
              <span>
                test
              </span>
              <div
                className="square"
              >
                <i
                  className="arrow right"
                />
              </div>
            </button>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span>
                  test
                </span>,
                <div
                  className="square"
                >
                  <i
                    className="arrow right"
                  />
                </div>,
              ],
              "onClick": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="arrow right"
                  />,
                  "className": "square",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "arrow right",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "div",
              },
            ],
            "type": "button",
          },
          "type": "div",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
